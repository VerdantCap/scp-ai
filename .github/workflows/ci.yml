name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.10'

    - name: Set up environment variable and write to .env file
      run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> .env
          echo "MINIO_API_PORT_NUMBER=${{ secrets.MINIO_API_PORT_NUMBER }}" >> .env
          echo "MINIO_CONSOLE_PORT_NUMBER=${{ secrets.MINIO_CONSOLE_PORT_NUMBER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "S3_PUBLIC_BUCKET=${{ secrets.S3_PUBLIC_BUCKET }}" >> .env
          echo "S3_FILES_BUCKET_NAME=${{ secrets.S3_FILES_BUCKET_NAME }}" >> .env 
          echo "SUPERCOG_DATA=${{ secrets.SUPERCOG_DATA }}" >> .env
      
    - name: Build Docker Image
      run: docker compose up  -d
      
    - name: Install Poetry using pip
      run: pip install poetry

    - name: Install dependencies in engine directory
      run: |
        cd engine
        poetry env activate
        poetry install --no-root
        chmod +x ./agents.sh
        ./agents.sh migrate
        ./agents.sh

    - name: Install dependencies in engine directory
      run: |
        cd dashboard
        poetry env activate
        poetry install --no-root
        chmod +x ./dashboard.sh
        ./dashboard.sh migrate
        ./dashboard.sh
